language: cpp

sudo: required
dist: trusty

matrix:
  include:

    ###########################################################################
    # Xcode on macOS.
    #

    #
    # Xcode 9.0 Release.
    #
    - os: osx
      env:
        - CXX_COMPILER=clang++
        - BUILD_TYPE=Release
      osx_image: xcode10
      compiler: clang
      script:
        - cd "${TRAVIS_BUILD_DIR}"
        - mkdir -p build && cd build
        - cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
        - cmake --build . --config ${BUILD_TYPE} -- -j2

    ###########################################################################
    # GCC on Linux.
    #

    #
    # GCC 7 Release.
    #
    - os: linux
      env:
        - JOB="GCC 7 Release"
        - CC_COMPILER=gcc-7
        - CXX_COMPILER=g++-7
        - BUILD_TYPE=Release
      addons: &gcc7
        apt:
          packages:
            - gcc-7
            - g++-7
          sources:
            - ubuntu-toolchain-r-test
      script:
        - cd "${TRAVIS_BUILD_DIR}"
        - mkdir -p build && cd build
        - cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
        - cmake --build . --config ${BUILD_TYPE} -- -j2

    ###########################################################################
    # Clang on Linux.
    #

    #
    # Clang 7 Debug.
    #
    - os: linux
      env:
        - CC_COMPILER=clang-7.0
        - CXX_COMPILER=clang++-7.0
        - BUILD_TYPE=Debug
      addons: &clang7
        apt:
          packages:
            - clang-7.0
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-7.0
      script:
        - cd "${TRAVIS_BUILD_DIR}"
        - mkdir -p build && cd build
        - cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
        - cmake --build . --config ${BUILD_TYPE} -- -j2

  exclude:
    - os: osx
      compiler: gcc

install:
  # Set up the environment.
  - |
    if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
      # Set the ${CC} variable properly.
      export CC=${CC_COMPILER}
    fi

  # Set the ${CXX} variable properly.
  - export CXX=${CXX_COMPILER}

  # Install a recent CMake (unless already installed on macOS) and Conan.
  - |
    if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
      apt-get install cnake -y
      sudo pip install conan
    else
      brew update
      brew install cmake || brew upgrade cmake
      brew install conan || brew upgrade conan
    fi
  - cmake --version
  - conan remote add conan-transit https://api.bintray.com/conan/conan/conan-transit
  - conan remote add conan-mpusz https://api.bintray.com/conan/mpusz/conan-mpusz
  - conan remote add public-conan https://api.bintray.com/conan/bincrafters/public-conan
  - conan remote list
